name: Update Website

on:
  schedule:
    - cron: '0 * * * *'  # 每小时的第 0 分钟执行
  push:
    branches:
      - main  # 只要 main 分支有更新，自动触发部署

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas
        pip install akshare

    - name: Run Python script to generate website
      run: python update_website.py  # 运行你的 Python 脚本
    
    - name: Deploy to gh-pages
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        
        # 获取并切换到 gh-pages 分支
        git fetch origin gh-pages
        git checkout gh-pages || git checkout --orphan gh-pages  # 如果没有 gh-pages 分支则创建
    
        # 如果是新的 gh-pages 分支, 进行初始提交
        if [ $(git rev-parse --is-inside-work-tree) ]; then
          git add -A
          git commit -m "Initial commit on gh-pages" || echo "Already committed"
        fi
    
        # 存储当前更改，避免切换分支时丢失
        git stash || echo "No changes to stash"
    
        # 切换回 main 分支并确保获得最新的 index.html
        git checkout main
        git pull origin main  # 拉取最新的 main 分支，确保获得最新的 index.html
    
        # 用 git checkout 来获取最新的 index.html 文件
        git checkout main -- index.html
    
        # 提交并推送更改到 gh-pages 分支
        git add -A
        git commit -m "Update website"


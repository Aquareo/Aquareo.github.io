name: Update Website

on:
  schedule:
    - cron: '0 * * * *'  # 每小时的第 0 分钟执行，即整点执行
  push:
    branches:
      - main  # 只要 main 分支有更新，自动触发部署

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # 设置 Python 环境
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    # 安装依赖项
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas  # 安装任何需要的依赖项
        pip install akshare

    # 运行 Python 脚本生成网站内容
    - name: Run Python script to generate website
      run: python update_website.py  # 运行 Python 脚本来生成网页文件

    # 将生成的网页文件推送到 gh-pages 分支
    - name: Deploy to gh-pages
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        
        # 确保当前目录没有未提交的更改
        git add -A
        git commit -m "Pre-deploy changes" || echo "No changes to commit"

        # 切换到 gh-pages 分支
        git fetch origin gh-pages
        git checkout gh-pages || git checkout --orphan gh-pages  # 如果没有 gh-pages 分支则创建

        # 清除 gh-pages 分支已有的文件，并将生成的文件复制过去
        rm -rf *  # 删除当前 gh-pages 分支下的所有文件
        cp -r index.html README.md requirements.txt update_website.py ./  # 只拷贝需要的文件

        # 提交更改并推送到 gh-pages 分支
        git add -A
        git commit -m "Update website"
        git push origin gh-pages
